syntax = "proto3";
package oracle.v1;

import "google/api/annotations.proto";
import "oracle/v1/types.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/MinterTeam/mhub/chain/x/oracle/types";

// Query defines the gRPC querier service
service Query {
  rpc CurrentEpoch(QueryCurrentEpochRequest) returns(QueryCurrentEpochResponse) {
    option (google.api.http).get = "/oracle/v1beta/epoch/current";
  }
  rpc MinEthFee(QueryMinEthFeeRequest) returns(QueryMinEthFeeResponse) {
      option (google.api.http).get = "/oracle/v1beta/min_eth_fee";
  }
}

message QueryCurrentEpochRequest {}
message QueryCurrentEpochResponse { Epoch epoch = 1; }

message QueryMinEthFeeRequest {}
message QueryMinEthFeeResponse {
    string value = 1 [
                      (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
                      (gogoproto.nullable) = false
                     ];
}