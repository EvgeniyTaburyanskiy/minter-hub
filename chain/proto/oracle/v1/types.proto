syntax = "proto3";
package oracle.v1;

import "oracle/v1/msgs.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/MinterTeam/mhub/chain/x/oracle/types";


// It's difficult to serialize and deserialize
// interfaces, instead we can make this struct
// that stores all the data the interface requires
// and use it to store and then re-create a interface
// object with all the same properties.
message GenericClaim {
  uint64  epoch   = 1;
  int32   claim_type    = 2;
  bytes   hash          = 3;
  string  event_claimer = 4;
  oneof claim {
    MsgPriceClaim price_claim = 5;
  }
}

message Epoch {
  uint64 nonce   = 1;
  repeated Vote votes = 2;
}

message Vote {
  string oracle = 1;
  MsgPriceClaim claim = 2;
}

message Coin {
  string denom = 1;
  string eth_addr = 2;
  uint64 minter_id = 3 [(gogoproto.jsontag) = "minter_id"];
  uint64 eth_decimals = 4;
}

message TxStatus {
  string in_tx_hash = 1;
  string out_tx_hash = 2;
  TxStatusType status = 3;
}

enum TxStatusType {
  option (gogoproto.goproto_enum_prefix) = false;

  TX_STATUS_NOT_FOUND  = 0 [(gogoproto.enumvalue_customname) = "TX_STATUS_NOT_FOUND" ];
  TX_STATUS_DEPOSIT_RECEIVED  = 1 [(gogoproto.enumvalue_customname) = "TX_STATUS_DEPOSIT_RECEIVED" ];
  TX_STATUS_BATCH_CREATED = 2 [(gogoproto.enumvalue_customname) = "TX_STATUS_BATCH_CREATED"];
  TX_STATUS_BATCH_EXECUTED   = 3 [(gogoproto.enumvalue_customname) = "TX_STATUS_BATCH_EXECUTED"];
  TX_STATUS_REFUNDED   = 4 [(gogoproto.enumvalue_customname) = "TX_STATUS_REFUNDED"];
}